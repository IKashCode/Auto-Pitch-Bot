using System;
using Telegram.Bot;
using Telegram.Bot.Types;
using Telegram.Bot.Types.ReplyMarkups;
using NotLoveBot.Program;
using Telegram.Bot.Args;
using Telegram.Bot.Types.Enums;

namespace NotLoveBot.AdministrationPanelController
{
    public class AdministratorMenu
    {
        // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–≤–µ—á–∞—é—Ç –∑–∞ —Ä–∞–±–æ—Ç—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏.
        public static bool EnabledMessages = true, EnabledCheckMessages = true;
        
        // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        private static Dictionary<long, EventHandler<CallbackQueryEventArgs>> usersCallbacks = new Dictionary<long, EventHandler<CallbackQueryEventArgs>>();

        public async Task GetAdministratorMenu(TelegramBotClient telegramBotClient, Message message, Message editMessage, string administratorStatus)
        {
            try
            {
            // –ú–µ–Ω—é –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
            InlineKeyboardMarkup adminInlineKeyboardMarkup = new InlineKeyboardMarkup(new[] {
                new[] { InlineKeyboardButton.WithCallbackData("üì© –ü–µ—Ä–µ—Å—ã–ª–∫–∞") },
                new[] { InlineKeyboardButton.WithCallbackData("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞") },
                new[] { InlineKeyboardButton.WithCallbackData("üìã –°–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π") },
                new[] { InlineKeyboardButton.WithCallbackData("üö™ –í—ã–π—Ç–∏") }
            });

            // –î—Ä—É–≥–æ–π –≤–∏–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–≤–ª–∞–¥–µ–ª—å—Ü–∞).
            if (administratorStatus == "owner")
            {
                adminInlineKeyboardMarkup = new InlineKeyboardMarkup(new[] {
                    new[] { InlineKeyboardButton.WithCallbackData("üì© –ü–µ—Ä–µ—Å—ã–ª–∫–∞") },
                    new[] { InlineKeyboardButton.WithCallbackData("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞") },
                    new[] { InlineKeyboardButton.WithCallbackData("üìã –°–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π") },
                    new[] { InlineKeyboardButton.WithCallbackData("üìú –°–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤") },
                    new[] { InlineKeyboardButton.WithCallbackData("üö™ –í—ã–π—Ç–∏") }
                });
            }

            // –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –º–µ–Ω—é.
            Message administratorMenuPanel;

            if (editMessage == null)
            {
                administratorMenuPanel = await telegramBotClient.SendTextMessageAsync(message.Chat.Id,
                "*–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –¥–µ–π—Å—Ç–≤–∏–π, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å:*\n\nüì© *–ü–µ—Ä–µ—Å—ã–ª–∫–∞* ‚Äî —É–ø—Ä–∞–≤–ª—è–π—Ç–µ –ø–µ—Ä–µ—Å—ã–ª–∫–æ–π —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª ‚Äî –≤–∫–ª—é—á–∞–π—Ç–µ –∏ –≤—ã–∫–ª—é—á–∞–π—Ç–µ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –ø–æ –≤–∞—à–µ–º—É —É—Å–º–æ—Ç—Ä–µ–Ω–∏—é.\n\n‚úÖ *–ü—Ä–æ–≤–µ—Ä–∫–∞* ‚Äî –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –ø–µ—Ä–µ–¥ –∏—Ö –ø–µ—Ä–µ—Å—ã–ª–∫–æ–π –≤ –∫–∞–Ω–∞–ª ‚Äî –≤–∫–ª—é—á–∞–π—Ç–µ –∏–ª–∏ –≤—ã–∫–ª—é—á–∞–π—Ç–µ —ç—Ç—É –æ–ø—Ü–∏—é.\n\nüìã *–°–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π* ‚Äî –ø–æ–ª—É—á–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é –¥–∞—Ç—É.\n\nüìú *–°–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤* ‚Äî –∑–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–ø–∏—Å–∫–æ–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤, –¥–æ–±–∞–≤–ª—è—Ç—å –∏–ª–∏ —É–¥–∞–ª—è—Ç—å –∏—Ö. _–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞._\n\n*–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.*",
                replyMarkup: adminInlineKeyboardMarkup, parseMode: ParseMode.Markdown);
            }
            else
            {
                administratorMenuPanel = await telegramBotClient.EditMessageTextAsync(editMessage.Chat.Id, editMessage.MessageId,
                "*–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –¥–µ–π—Å—Ç–≤–∏–π, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å:*\n\nüì© *–ü–µ—Ä–µ—Å—ã–ª–∫–∞* ‚Äî —É–ø—Ä–∞–≤–ª—è–π—Ç–µ –ø–µ—Ä–µ—Å—ã–ª–∫–æ–π —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª ‚Äî –≤–∫–ª—é—á–∞–π—Ç–µ –∏ –≤—ã–∫–ª—é—á–∞–π—Ç–µ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –ø–æ –≤–∞—à–µ–º—É —É—Å–º–æ—Ç—Ä–µ–Ω–∏—é.\n\n‚úÖ *–ü—Ä–æ–≤–µ—Ä–∫–∞* ‚Äî –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –ø–µ—Ä–µ–¥ –∏—Ö –ø–µ—Ä–µ—Å—ã–ª–∫–æ–π –≤ –∫–∞–Ω–∞–ª ‚Äî –≤–∫–ª—é—á–∞–π—Ç–µ –∏–ª–∏ –≤—ã–∫–ª—é—á–∞–π—Ç–µ —ç—Ç—É –æ–ø—Ü–∏—é.\n\nüìã *–°–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π* ‚Äî –ø–æ–ª—É—á–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é –¥–∞—Ç—É.\n\nüìú *–°–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤* ‚Äî –∑–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–ø–∏—Å–∫–æ–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤, –¥–æ–±–∞–≤–ª—è—Ç—å –∏–ª–∏ —É–¥–∞–ª—è—Ç—å –∏—Ö. _–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞._\n\n*–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.*",
                replyMarkup: adminInlineKeyboardMarkup, parseMode: ParseMode.Markdown);
            }
            
            EventHandler<CallbackQueryEventArgs> BotOnButtonClick = async (sender, callbackQueryEventArgs) =>
            {
                var callbackQueryMessage = callbackQueryEventArgs.CallbackQuery;

                // –£–¥–∞–ª—è–µ–º –≤—Å–µ—Ö –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
                if (callbackQueryMessage.From.Id != message.From.Id)
                    return;

                // –ö–ª–∞—Å—Å –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞).
                SwitchingSystemStatus switchingSystemStatus = new SwitchingSystemStatus();
                // –ö–ª–∞—Å—Å –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π –∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –¥–∞—Ç—É.
                UnloadList unloadList = new UnloadList();
                // –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º–∏ –±–æ—Ç–∞.
                AdministratorsController administratorsController = new AdministratorsController();

                switch (callbackQueryMessage.Data)
                {
                    case "üì© –ü–µ—Ä–µ—Å—ã–ª–∫–∞":
                        await switchingSystemStatus.StatusController(telegramBotClient, callbackQueryMessage.Message, administratorMenuPanel, EnabledMessages, "–ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π", administratorStatus);
                        break;
                    case "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞":
                        await switchingSystemStatus.StatusController(telegramBotClient, callbackQueryMessage.Message, administratorMenuPanel, EnabledCheckMessages, "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π", administratorStatus);
                        break;
                    case "üìã –°–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π":
                        if (administratorMenuPanel != null)
                            await telegramBotClient.DeleteMessageAsync(administratorMenuPanel.Chat.Id, administratorMenuPanel.MessageId);
                            
                        await unloadList.UnloadListSenders(telegramBotClient, message, "üìÖ –£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ *DD.MM.YYYY*, –∑–∞ –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π —Å–æ–æ–±—â–µ–Ω–∏–π, –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /today, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞ —Å–µ–≥–æ–¥–Ω—è.", administratorStatus);
                        break;
                    case "üìú –°–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤":
                        await administratorsController.UnloadListAdministrators(telegramBotClient, message, administratorMenuPanel, administratorStatus);
                        break;
                    case "üö™ –í—ã–π—Ç–∏":
                        // –£–¥–∞–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤ –ø–∞–Ω–µ–ª–∏.
                        foreach (string administrator in NotLoveBot.Program.Program.ActiveAdministratorsId)
                        {
                            if (administrator == callbackQueryMessage.From.Id.ToString())
                            {
                                NotLoveBot.Program.Program.ActiveAdministratorsId.Remove(administrator);
                                await telegramBotClient.SendTextMessageAsync(callbackQueryMessage.Message.Chat.Id, "üö™ *–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.* –ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /controller. üîÑ", parseMode: ParseMode.Markdown);

                                // –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
                                telegramBotClient.OnCallbackQuery -= usersCallbacks[message.From.Id];
                                usersCallbacks.Remove(message.From.Id);
                                break;
                            }
                        }
                        break;
                }
            };

            // –ï—Å–ª–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ —Å–æ–∑–¥–∞–Ω, —Ç–æ –æ–Ω —É–¥–∞–ª—è–µ—Ç—Å—è.
            if (usersCallbacks.ContainsKey(message.From.Id))
            {
                telegramBotClient.OnCallbackQuery -= usersCallbacks[message.From.Id];
                usersCallbacks[message.From.Id] = BotOnButtonClick;
            }
            else
                usersCallbacks.Add(message.From.Id, BotOnButtonClick);

            telegramBotClient.OnCallbackQuery += BotOnButtonClick;
        }
        catch(Exception exception)
        {
            Console.WriteLine(exception);
        }
    }
    }
}