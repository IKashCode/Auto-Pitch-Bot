using System;
using NotLoveBot.DataBaseProcess;
using NotLoveBot.Models;
using Telegram.Bot;
using Telegram.Bot.Args;
using Telegram.Bot.Types;
using Telegram.Bot.Types.Enums;
using Telegram.Bot.Types.ReplyMarkups;

namespace NotLoveBot.AdministrationPanelController
{
    class AdministratorsController
    {
        private AdministratorMenu _administratorMenu = new AdministratorMenu();

        private SetDataProcessing _setDataProcessing = new SetDataProcessing();
        private GetDataProcessing _getDataProcessing = new GetDataProcessing();
        
        public async Task UnloadListAdministrators(TelegramBotClient telegramBotClient, Message message, Message editMessage, string administratorStatus)
        {
            try{
            List<AdministrationModel> administrationModels = await _getDataProcessing.GetListAdministrators();
            string administratorsListText = "üìú *–°–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤:*\n";

            foreach (var administrationModel in administrationModels)
            {
                // –ï—Å–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —è–≤–ª—è–µ—Ç—Å—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–º, —Ç–æ —Å—Ç–∞–≤–∏—Ç—Å—è –∫–æ—Ä–æ–Ω–∞ –≤–º–µ—Å—Ç–æ –æ—á–∫–æ–≤.
                string administrationStatus = "üòé";
                if (administrationModel.Status == "owner")
                    administrationStatus = "üëë";

                administratorsListText += $"\n{administrationStatus} `{administrationModel.Name}`\nüÜî `{administrationModel.Id}`\n";
            }

            InlineKeyboardMarkup ownerInlineKeyboardMarkup = new InlineKeyboardMarkup(new[] {
                new[] 
                { 
                    InlineKeyboardButton.WithCallbackData("‚ûï –î–æ–±–∞–≤–∏—Ç—å"),
                    InlineKeyboardButton.WithCallbackData("‚ûñ –£–¥–∞–ª–∏—Ç—å") 
                },
                new[] { InlineKeyboardButton.WithCallbackData("‚¨ÖÔ∏è –ù–∞–∑–∞–¥") }
            });

            Message administratorsList = await telegramBotClient.EditMessageTextAsync(editMessage.Chat.Id, editMessage.MessageId, administratorsListText, replyMarkup: ownerInlineKeyboardMarkup, parseMode: ParseMode.Markdown);

            telegramBotClient.OnCallbackQuery += BotOnButtonClick;
            async void BotOnButtonClick(object sender, CallbackQueryEventArgs callbackQueryEventArgs)
            {
                var callbackQueryMessage = callbackQueryEventArgs.CallbackQuery;

                switch (callbackQueryMessage.Data)
                {
                    case "‚ûï –î–æ–±–∞–≤–∏—Ç—å":
                        await Controller(telegramBotClient, message, administratorStatus, "–¥–æ–±–∞–≤–∏—Ç—å");
                        break;
                    case "‚ûñ –£–¥–∞–ª–∏—Ç—å":
                        await Controller(telegramBotClient, message, administratorStatus, "—É–¥–∞–ª–∏—Ç—å");
                        break;
                    case "‚¨ÖÔ∏è –ù–∞–∑–∞–¥":
                        await _administratorMenu.GetAdministratorMenu(telegramBotClient, message, administratorsList, administratorStatus);
                        break;
                }

                telegramBotClient.OnCallbackQuery -= BotOnButtonClick;
            }}catch(Exception){}
        }

        private async Task Controller(TelegramBotClient telegramBotClient, Message message, string administratorStatus, string action)
        {
            try {
            // –ò–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –ø–æ–¥ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.
            string actionText = "‚ùóÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ *username* —Ç–æ–≥–æ, –∫–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã.";
            if (action == "—É–¥–∞–ª–∏—Ç—å")
                actionText = $"‚ùóÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–º—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, *—É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≤ —Å–ø–∏—Å–∫–µ*, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ –∏–∑ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤.";

            await telegramBotClient.SendTextMessageAsync(message.Chat.Id, actionText, parseMode: ParseMode.Markdown);

            telegramBotClient.OnMessage += BotOnMessageReceived;
            async void BotOnMessageReceived(object sender, MessageEventArgs messageEventArgs)
            {
                Message replyMessage = messageEventArgs.Message;
                string username = replyMessage.Text;

                switch (action)
                {
                    case "–¥–æ–±–∞–≤–∏—Ç—å":
                        // –£–¥–∞–ª–µ–Ω–∏–µ "@" –≤ –Ω–∞—á–∞–ª–µ username.
                        if (username.StartsWith("@"))
                            username = username.TrimStart('@');

                        NotLoveBot.Program.Program.PendingAdditionAdministrators.Add(username);

                        await telegramBotClient.SendTextMessageAsync(message.Chat.Id,
                        $"‚úÖ *–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.* –ß—Ç–æ–±—ã –æ–Ω —Å–º–æ–≥ –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –µ–º—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /controller.\n\n‚ùì –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞—é—â–∏—Ö, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /clear.",
                        parseMode: ParseMode.Markdown);

                        await _administratorMenu.GetAdministratorMenu(telegramBotClient, message, null, administratorStatus);
                        break;
                    case "—É–¥–∞–ª–∏—Ç—å":
                        string resultText = "‚úÖ *–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Å–Ω—è—Ç —Å –¥–æ–ª–∂–Ω–æ—Å—Ç–∏!*";

                        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —Å–ø–∏—Å–∫–µ.
                        if (await _setDataProcessing.ExistenceCheck("Administrators_test_394832", "name", username) == true)
                        {
                            List<AdministrationModel> administrationModels = await _getDataProcessing.GetListAdministrators();
                            bool deletePermission = true;

                            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º —á–µ—Ä–µ–∑ —Ü–∏–∫–ª.
                            foreach (var administrationModel in administrationModels)
                            {
                                if (administrationModel.Name == username & administrationModel.Status == "owner")
                                {
                                    deletePermission = false;

                                    resultText = "‚ùå *–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤, –ø–æ—Å–∫–æ–ª—å–∫—É –æ–Ω –Ω–∞–∑–Ω–∞—á–∞–µ—Ç—Å—è –∏–ª–∏ —É–¥–∞–ª—è–µ—Ç—Å—è —Å–∏—Å—Ç–µ–º–æ–π!*";
                                    break;
                                }
                            }

                            // –ó–∞–ø—Ä–æ—Å —É–¥–∞–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –µ—Å–ª–∏ —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ.
                            if (deletePermission == true)
                                await _setDataProcessing.SetCreateRequest($"DELETE FROM Administrators_test_394832 WHERE name = '{username}'");
                        }
                        else
                            resultText = "ü§î –ü—Ä–æ—Å—Ç–∏—Ç–µ, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω –≤ —Å–ø–∏—Å–∫–µ. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω —É–∂–µ –±—ã–ª —É–¥–∞–ª—ë–Ω.";

                            await telegramBotClient.SendTextMessageAsync(message.Chat.Id, resultText, parseMode: ParseMode.Markdown);
                            await _administratorMenu.GetAdministratorMenu(telegramBotClient, message, null, administratorStatus);
                        break;
                }

                telegramBotClient.OnMessage -= BotOnMessageReceived;
            }}catch(Exception){}
        }
    }
}