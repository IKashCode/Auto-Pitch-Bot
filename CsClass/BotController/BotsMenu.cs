using System;
using NotLoveBot.AdministrationPanelController;
using Telegram.Bot;
using Telegram.Bot.Args;
using Telegram.Bot.Types;
using Telegram.Bot.Types.Enums;
using Telegram.Bot.Types.ReplyMarkups;

namespace NotLoveBot.BotController
{
    public class BotsMenu
    {
        // –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ —Å –º–µ–Ω—é.
        private static KeyboardMessagesController _keyboardMessagesController = new KeyboardMessagesController();
        public static Dictionary<long, int> lastMenuMessageIds = new Dictionary<long, int>();
        private static CreatedBotController _createdBotController = new CreatedBotController();

        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ callback –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
        private static Dictionary<long, EventHandler<CallbackQueryEventArgs>> usersCallbacks = new Dictionary<long, EventHandler<CallbackQueryEventArgs>>();
        
        public async Task GetBotsMenu(TelegramBotClient telegramBotClient, Message message, Message editMessage)
        {
            try {
            InlineKeyboardMarkup botsInlineKeyboardMarkup = new InlineKeyboardMarkup(new[] {
                new[]
                {
                    InlineKeyboardButton.WithCallbackData("üî® –°–æ–∑–¥–∞—Ç—å"),
                    InlineKeyboardButton.WithCallbackData("üö´ –û—Ç–∫–ª—é—á–∏—Ç—å"),
                },
                new[] { InlineKeyboardButton.WithCallbackData("‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∞—à–∏—Ö –±–æ—Ç–æ–≤") }
            });

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è.
            Message? botsMenu;
            if (editMessage == null)
            {
                botsMenu = await telegramBotClient.SendTextMessageAsync(message.Chat.Id,
                "*üõ†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π:*\n\n‚öôÔ∏è *–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∞—à–∏—Ö –±–æ—Ç–æ–≤* ‚Äî –∑–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–º–∏ –±–æ—Ç–∞–º–∏.\nüî® *–°–æ–∑–¥–∞—Ç—å* ‚Äî –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ –≤ –≤—ã–±—Ä–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É –∏–ª–∏ –∫–∞–Ω–∞–ª.\nüö´ *–û—Ç–∫–ª—é—á–∏—Ç—å* ‚Äî –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –≤–∞–º–∏ –±–æ—Ç–æ–≤.\n\n*–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.*",
                replyMarkup: botsInlineKeyboardMarkup, parseMode: ParseMode.Markdown);
            }
            else
            {
                botsMenu = await telegramBotClient.EditMessageTextAsync(editMessage.Chat.Id, editMessage.MessageId,
                "*üõ†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π:*\n\n‚öôÔ∏è *–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∞—à–∏—Ö –±–æ—Ç–æ–≤* ‚Äî –∑–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–º–∏ –±–æ—Ç–∞–º–∏.\nüî® *–°–æ–∑–¥–∞—Ç—å* ‚Äî –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ –≤ –≤—ã–±—Ä–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É –∏–ª–∏ –∫–∞–Ω–∞–ª.\nüö´ *–û—Ç–∫–ª—é—á–∏—Ç—å* ‚Äî –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –≤–∞–º–∏ –±–æ—Ç–æ–≤.\n\n*–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.*",
                replyMarkup: botsInlineKeyboardMarkup, parseMode: ParseMode.Markdown);
            }

            // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –º–µ–Ω—é.
            await _keyboardMessagesController.AddKeyboardMessages(botsMenu);

            EventHandler<CallbackQueryEventArgs> BotOnButtonClick = async (sender, callbackQueryEventArgs) =>
            {
                var callbackQueryMessage = callbackQueryEventArgs.CallbackQuery;

                if (callbackQueryMessage.From.Id != message.From.Id)
                    return;

                switch (callbackQueryMessage.Data)
                {
                    case "üî® –°–æ–∑–¥–∞—Ç—å":
                        await _createdBotController.CreateBot(telegramBotClient, message, botsMenu, "üîë –î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è *–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –±–æ—Ç–æ–º Telegram –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –±–æ—Ç–æ–≤ ‚Äî @BotFather*.\n‚óè –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ *—Ç–æ–∫–µ–Ω*, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ *—Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —ç—Ç–æ—Ç —á–∞—Ç* –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞.");
                        break;
                    case "üö´ –û—Ç–∫–ª—é—á–∏—Ç—å":
                        await _createdBotController.DeleteBot(telegramBotClient, message, botsMenu);
                        break;
                    case "‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∞—à–∏—Ö –±–æ—Ç–æ–≤":
                        await _createdBotController.BotParameters(telegramBotClient, message, botsMenu);
                        break;
                }
            };

            // –ï—Å–ª–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ —Å–æ–∑–¥–∞–Ω, —Ç–æ –æ–Ω —É–¥–∞–ª—è–µ—Ç—Å—è.
            if (usersCallbacks.ContainsKey(message.From.Id))
            {
                telegramBotClient.OnCallbackQuery -= usersCallbacks[message.From.Id];
                usersCallbacks[message.From.Id] = BotOnButtonClick;
            }
            else
                usersCallbacks.Add(message.From.Id, BotOnButtonClick);

            telegramBotClient.OnCallbackQuery += BotOnButtonClick;
        } catch(Exception exception) { Console.WriteLine(exception); }
        }
    }
}